#!/usr/bin/env python

import math

# import of relevant libraries.
import rospy # module for ROS APIs
import tf

# import msg/action/srv
from geometry_msgs.msg import Twist # message type for cmd_vel
from turtlesim.msg import Pose

from ppgapt.msg import Registration

LASER_ANGLE_FRONT = 0 # radians
MIN_THRESHOLD_DISTANCE = MIN_THRESHOLD_DISTANCE = 0.5 # m, threshold distance.


class Prey():
    def __init__(self):
        self.namespace = rospy.get_namespace()

        self._registration_pub = rospy.Publisher("registration", Registration, queue_size=1)


    def run(self):

        registration_msg = Registration()
        registration_msg.robotname = self.namespace
        self._registration_pub.publish(registration_msg)

    def _laser_callback(self, msg):
        """Processing of laser message."""
        # Access to the index of the measurement in front of the robot.
        # NOTE: assumption: the one at angle 0 corresponds to the front.
        i = int((LASER_ANGLE_FRONT - msg.angle_min) / msg.angle_increment)
        if msg.ranges[i] <= MIN_THRESHOLD_DISTANCE:
            self._close_obstacle = True
        else:
            self._close_obstacle = False

        
